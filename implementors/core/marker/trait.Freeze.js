(function() {var implementors = {};
implementors["byteorder"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"byteorder/enum.BigEndian.html\" title=\"enum byteorder::BigEndian\">BigEndian</a>","synthetic":true,"types":["byteorder::BigEndian"]},{"text":"impl Freeze for <a class=\"enum\" href=\"byteorder/enum.LittleEndian.html\" title=\"enum byteorder::LittleEndian\">LittleEndian</a>","synthetic":true,"types":["byteorder::LittleEndian"]}];
implementors["modbus"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"modbus/enum.ExceptionCode.html\" title=\"enum modbus::ExceptionCode\">ExceptionCode</a>","synthetic":true,"types":["modbus::ExceptionCode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"modbus/enum.Reason.html\" title=\"enum modbus::Reason\">Reason</a>","synthetic":true,"types":["modbus::Reason"]},{"text":"impl Freeze for <a class=\"enum\" href=\"modbus/enum.Error.html\" title=\"enum modbus::Error\">Error</a>","synthetic":true,"types":["modbus::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"modbus/enum.Coil.html\" title=\"enum modbus::Coil\">Coil</a>","synthetic":true,"types":["modbus::Coil"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"modbus/scoped/struct.ScopedCoil.html\" title=\"struct modbus::scoped::ScopedCoil\">ScopedCoil</a>&lt;'a&gt;","synthetic":true,"types":["modbus::scoped::ScopedCoil"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"modbus/scoped/struct.ScopedRegister.html\" title=\"struct modbus::scoped::ScopedRegister\">ScopedRegister</a>&lt;'a&gt;","synthetic":true,"types":["modbus::scoped::ScopedRegister"]},{"text":"impl Freeze for <a class=\"enum\" href=\"modbus/scoped/enum.CoilDropFunction.html\" title=\"enum modbus::scoped::CoilDropFunction\">CoilDropFunction</a>","synthetic":true,"types":["modbus::scoped::CoilDropFunction"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"modbus/scoped/enum.RegisterDropFunction.html\" title=\"enum modbus::scoped::RegisterDropFunction\">RegisterDropFunction</a>&lt;'a&gt;","synthetic":true,"types":["modbus::scoped::RegisterDropFunction"]},{"text":"impl Freeze for <a class=\"struct\" href=\"modbus/tcp/struct.Config.html\" title=\"struct modbus::tcp::Config\">Config</a>","synthetic":true,"types":["modbus::tcp::Config"]},{"text":"impl Freeze for <a class=\"struct\" href=\"modbus/tcp/struct.Transport.html\" title=\"struct modbus::tcp::Transport\">Transport</a>","synthetic":true,"types":["modbus::tcp::Transport"]}];
implementors["num_traits"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"num_traits/struct.ParseFloatError.html\" title=\"struct num_traits::ParseFloatError\">ParseFloatError</a>","synthetic":true,"types":["num_traits::ParseFloatError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"num_traits/enum.FloatErrorKind.html\" title=\"enum num_traits::FloatErrorKind\">FloatErrorKind</a>","synthetic":true,"types":["num_traits::FloatErrorKind"]}];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        })()